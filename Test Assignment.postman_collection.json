{
	"info": {
		"_postman_id": "0d26d7a9-1594-4fbd-9dd0-7d8af6dba451",
		"name": "Test Assignment",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29705819",
		"_collection_link": "https://gold-firefly-392762.postman.co/workspace/Test-Ass~2c50e3da-a9fd-4b10-910c-baf02fa9e915/collection/29705819-0d26d7a9-1594-4fbd-9dd0-7d8af6dba451?action=share&source=collection_link&creator=29705819"
	},
	"item": [
		{
			"name": "Auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"",
							"pm.test(\"Content-Type header is application/json\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});",
							"",
							"",
							"pm.test(\"Token is present in the response\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData.token).to.exist;",
							"});",
							"",
							"",
							"pm.test(\"Token is a non-empty string\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  pm.expect(responseData.token).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Token should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"Token is in a valid format\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  pm.expect(responseData.token).to.be.a('string');",
							"  pm.expect(responseData.token).to.have.lengthOf.at.least(1, \"Token should not be empty\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "\"token\": \"afb215eea6267a3\""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"password123\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/auth",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Bookings",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"  pm.expect(pm.response.responseTime).to.be(200);",
							"});",
							"",
							"",
							"pm.test(\"Response has the required field - bookingid\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('array');",
							"    responseData.forEach(function (booking) {",
							"        pm.expect(booking).to.have.property('bookingid');",
							"    });",
							"});",
							"",
							"",
							"pm.test(\"Content type is application/json\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});",
							"",
							"",
							"pm.test(\"Verify that the response is an array with at least one element\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('array').that.is.not.empty;",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is within acceptable limits\", function () {",
							"  pm.expect(pm.response.responseTime).to.be.below(600);",
							"});",
							"",
							"pm.test(\"Bookingdates contains checkin and checkout dates\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData.booking.bookingdates).to.include.keys('checkin', 'checkout');",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstname\" : \"faith\",\n    \"lastname\" : \"Brown\",\n    \"totalprice\" : 111,\n    \"depositpaid\" : true,\n    \"bookingdates\" : {\n        \"checkin\" : \"2018-01-01\",\n        \"checkout\" : \"2019-01-01\"\n    },\n    \"additionalneeds\" : \"Breakfast\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetBookings",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Test the response body structure and values",
							"pm.test(\"Response data format and structure are valid\", function () {",
							"    var responseJSON = pm.response.json();",
							"",
							"    // Check for the existence of common fields and their data types",
							"    pm.expect(responseJSON).to.have.property('firstname').that.is.a('string');",
							"    pm.expect(responseJSON).to.have.property('lastname').that.is.a('string');",
							"    pm.expect(responseJSON).to.have.property('totalprice').that.is.a('number');",
							"    pm.expect(responseJSON).to.have.property('depositpaid').that.is.a('boolean');",
							"    pm.expect(responseJSON).to.have.property('bookingdates').that.is.an('object');",
							"    pm.expect(responseJSON).to.have.property('additionalneeds').that.is.a('string');",
							"",
							"    // Check the structure of the booking dates object",
							"    pm.expect(responseJSON.bookingdates).to.have.property('checkin').that.is.a('string');",
							"    pm.expect(responseJSON.bookingdates).to.have.property('checkout').that.is.a('string');",
							"});",
							"",
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking/:id\n",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking",
						":id\n"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					],
					"variable": [
						{
							"key": "id\n",
							"value": "5"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Bookings",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "token",
						"value": "{{token}}"
					},
					{
						"key": "Authorization",
						"value": "Basic YWRtaW46cGFzc3dvcmQxMjM="
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstname\": \"Mark\",\n    \"lastname\": \"Jackson\",\n    \"totalprice\": 817,\n    \"depositpaid\": false,\n    \"bookingdates\": {\n        \"checkin\": \"2018-11-29\",\n        \"checkout\": \"2020-01-21\"\n    },\n    \"additionalneeds\": \"Lunch\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking/10",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking",
						"10"
					]
				},
				"description": "\n    \n### Update Booking Additional Needs\n\nThis API endpoint is used to update the 'additionalneeds' field of a specific booking by sending an HTTP PUT request to the specified URL.\n\n#### Request Body\n- The request body should be in raw format with JSON data.\n    - `additionalneeds`: (string) The additional needs for the booking. In this case, it should be updated to 'Lunch'.\n\nExample:\n```json\n{\n    \"additionalneeds\": \"Lunch\"\n}\n```\n\n#### Response\n- Status: 403 Forbidden\n- Content-Type: text/plain\n\n"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "https://restful-booker.herokuapp.com/booking/"
		},
		{
			"key": "token",
			"value": "1b8e0944c2aa729",
			"type": "string"
		},
		{
			"key": "bookingID",
			"value": ""
		}
	]
}